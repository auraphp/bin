#!/usr/bin/env php
<?php
/**
 * A series of commands to work with Aura library repos.
 * 
 * @todo A "validate" command to validate a library repo; composer, travis,
 * directories, etc.
 */
// strictest error reporting
error_reporting(E_ALL);

// get the github authorization string
$file = $_SERVER['HOME'] . '/.aura/github-auth';
if (! file_exists($file) || ! is_readable($file)) {
    echo "Please create '$file' with your github username:password authorization." . PHP_EOL;
    die(1);
}
$github_auth = file_get_contents($file);

// autoloading
spl_autoload_register(function ($class) {
    include __DIR__ . "/$class.php";
});

// shift off the script name
array_shift($argv);

// name => class
$commands = [
    'repos' => 'Repos',
    'issues' => 'Issues',
    'package' => 'Package',
    'system-status' => 'SystemStatus',
];

// does the command exist?
$name = array_shift($argv);
if (! isset($commands[$name])) {
    echo "Command not specified." . PHP_EOL;
    exit(1);
}

// does the class exist?
$class = $commands[$name];
if (! class_exists($class)) {
    echo "Command not defined." . PHP_EOL;
    exit(1);
}

// instantiate and invoke the class with modified argv
$command = new $class($github_auth);
$command($argv);
exit(0);
